{
"patternDictionary":[

{"name":"Filter",
"description" : "A simple mapping for any node with operation type Filter",
"pattern":[
	{"sequence":[
		{"s1": {"name": "optype", "values": [{"value": "Filter"}]}}]}
],
"bpmnElement": [{"name":"task", "attributes":[{"name":"id", "value":"$graph"}, 
											{"name":"name", "value":"$graph"}]}]
},

{"name":"Grouper",
"description" : "A simple mapping for any node with operation type Grouper",
"pattern":[
	{"sequence":[
		{"s1": {"name": "optype", "values": [{"value": "Grouper"}]}}]}
],
"bpmnElement": [{"name":"task", "attributes":[{"name":"id", "value":"$graph"}, 
											{"name":"name", "value":"$graph"}]}]
},

{"name":"Sort",
"description": "A simple mapping for any node with 
				operation type Sort",
"pattern":[
	{"sequence":[
		{"s1": {"name": "optype", "values": [{"value": "Sort"}]}}]}
],
"bpmnElement": 
	[{"name":"task", 
	"attributes":[{"name":"id", "value":"$graph"}, 
				{"name":"name", "value":"$graph"}]}]																			
},

{"name":"Project",
"description": "A simple mapping for any node with operation type Project",
"pattern": [
	{"sequence":[
		{"s1": {"name": "optype", "values": [{"value": "Project"}]}}]}
],
"bpmnElement":[{"name":"task", "attributes":[{"name":"id", "value":"$graph"}, 
							{"name":"name", "value":"$graph"}]}]
},

{"name":"AttributeAddition",
"description": "A simple mapping for any node with operation type AttributeAddition",
"pattern": [
	{"sequence":[
		{"s1": {"name": "optype", "values": [{"value": "AttributeAddition"}]}}]}
],
"bpmnElement": [{"name":"task", "attributes":[{"name":"id", "value":"$graph"}, 
												{"name":"name", "value":"$graph"}]}]
},

{"name":"Distinct",
"description": "A simple mapping for any node with operation type Distinct",
"pattern": [
	{"sequence":[
		{"s1": {"name": "optype", "values": [{"value": "Distinct"}]}}]}
],
"bpmnElement": [{"name":"task", "attributes":[{"name":"id", "value":"$graph"}, 
												{"name":"name", "value":"$graph"}]}]
},

{"name":"Rename",
"description": "A simple mapping for any node with operation type Rename",
"pattern": [
	{"sequence":[
		{"s1": {"name": "optype", "values": [{"value": "Rename"}]}}]}
],
"bpmnElement": [{"name":"task", "attributes":[{"name":"id", "value":"$graph"}, 
												{"name":"name", "value":"$graph"}]}]
},

{"name":"TopK",
"description": "A simple mapping for any node with operation type TopK",
"pattern": [
	{"sequence":[
		{"s1": {"name": "optype", "values": [{"value": "TopK"}]}}]}
],
"bpmnElement": [{"name":"task", "attributes":[{"name":"id", "value":"$graph"}, 
												{"name":"name", "value":"$graph"}]}]
},

{"name":"UserDefinedFunction",
"description": "A simple mapping for any node with operation type UserDefinedFunction",
"pattern": [
	{"sequence":[
		{"s1": {"name": "optype", "values": [{"value": "UserDefinedFunction"}]}}]}
],
"bpmnElement": [{"name":"task", "attributes":[{"name":"id", "value":"$graph"}, 
												{"name":"name", "value":"$graph"}]}]
},

{"name":"Router",
"description": "A simple mapping for any node with operation type Router",
"pattern":[
	{"sequence":[
		{"s1": {"name": "optype", "values": [{"value": "Router"}]}}]}
],
"bpmnElement": [{"name":"complexGateway", "attributes":[{"name":"gatewayDirection","value":"Unspecified"}, 
												{"name":"id", "value":"$graph"}, 
												{"name":"name", "value":"$graph"}]}
				]
},
							 
{"name":"Union",
"description": "A simple mapping for any node with operation type Union",
"pattern":[
	{"sequence":[
		{"s1": {"name": "optype", "values": [{"value": "Union"}]}}]}
],
"bpmnElement": [{"name":"parallelGateway","attributes":[{"name":"gatewayDirection","value":"Converging"},
														{"name":"id", "value":"$graph"}, 
														{"name":"name", "value":"$graph"}]}]
},
							 
{"name":"Merger",
"description": "A simple mapping for any node with operation type Merger",
"pattern":[
	{"sequence":[
		{"s1": {"name": "optype", "values": [{"value": "Merger"}]}}]}
],
"bpmnElement": [{"name":"parallelGateway", "attributes":[{"name":"gatewayDirection","value":"Converging"},
														{"name":"id", "value":"$graph"}, 
														{"name":"name", "value":"$graph"}]},
				{"name":"sequenceFlow", "attributes":[{"name":"id", "value": "$graph"},
													{"name":"sourceRef", "value":"$graph"},
													{"name":"targetRef", "value":"$graph"}]},
				{"name":"task", "attributes":[{"name":"name","value":"$create"},
											{"name":"id", "value":"$create"}]}]
},
							 
{"name":"Voter",
"description": "A simple mapping for any node with operation type Voter",
"pattern":[
	{"sequence":[
		{"s1": {"name": "optype", "values": [{"value": "Voter"}]}}]}
],
"bpmnElement": [{"name":"eventBasedGateway","attributes":[{"name":"gatewayDirection","value":"Mixed"},
														{"name":"id", "value":"$graph"}, 
														{"name":"name", "value":"$graph"}]}]
},

{"name":"Splitter",
"description": "A simple mapping for any node with operation type Splitter",
"pattern":[
	{"sequence":[
		{"s1": {"name": "optype", "values": [{"value": "Splitter"}]}}]}
],
"bpmnElement": [{"name":"parallelGateway","attributes":[{"name":"gatewayDirection","value":"Diverging"},
														{"name":"id", "value":"$graph"}, 
														{"name":"name", "value":"$graph"}]}]
},

{"name":"Join",
"description": "A simple mapping for any node with operation type Join",
"pattern":[
	{"sequence":[
		{"s1": {"name": "optype", "values": [{"value": "Join"}]}}]}
],
"bpmnElement":[{"name":"parallelGateway","attributes":[{"name":"gatewayDirection", "value":"Converging"},
														{"name":"id", "value":"$graph"}, 
														{"name":"name", "value":"$graph"}]},
			   {"name":"sequenceFlow", "attributes":[{"name":"id", "value": "$graph"},
														{"name":"sourceRef", "value":"$graph"},
														{"name":"targetRef", "value": "$graph"}]},
			   {"name":"task", "attributes":[{"name":"id", "value":"$create"}, 
														{"name":"name", "value":"$create"}]}]
},

{"name":"LeftOuterJoin",
"description": "A simple mapping for any node with operation type LeftOuterJoin",
"pattern":[
	{"sequence":[
		{"s1": {"name": "optype", "values": [{"value": "LeftOuterJoin"}]}}]}
],
"bpmnElement":[{"name":"parallelGateway","attributes":[{"name":"gatewayDirection", "value":"Converging"},
														{"name":"id", "value":"$graph"}, 
														{"name":"name", "value":"$graph"}]},
			   {"name":"sequenceFlow", "attributes":[{"name":"id", "value": "$graph"},
														{"name":"sourceRef", "value":"$graph"},
														{"name":"targetRef", "value": "$graph"}]},
			   {"name":"task", "attributes":[{"name":"id", "value":"$create"}, 
														{"name":"name", "value":"$create"}]}]
},

{"name":"TableInput",
"description": "A simple mapping for any node with operation type TableInput",
"pattern":[
	{"sequence":[
		{"s1": {"name": "optype", "values": [{"value": "TableInput"}]}}]}
],
"bpmnElement": [{"name":"dataStore", "attributes":[{"name":"id", "value":"$graph"},
													{"name":"name", "value":"$graph"},
													{"name":"isUnlimited", "value":"false"}]},
				{"name":"dataStoreReference", "attributes":[{"name":"dataStoreRef", "value":"DS_n"},
															{"name":"id", "value":"$graph"}]}]
},

{"name":"TableOutput",
"description": "A simple mapping for any node with operation type TableOutput",
"pattern":[
	{"sequence":[
		{"s1": {"name": "optype", "values": [{"value": "TableOutput"}]}}]}
],
"bpmnElement": [{"name":"dataStore", "attributes":[{"name":"id", "value":"DS_n"},
													{"name":"name", "value":"$graph"},
													{"name":"isUnlimited", "value":"false"}]},
				{"name":"dataStoreReference", "attributes":[{"name":"dataStoreRef", "value":"DS_n"},
															{"name":"id", "value":"$graph"}]}]
},

{"name":"FileInput",
"description": "A simple mapping for any node with operation type FileInput",
"pattern":[
	{"sequence":[
		{"s1": {"name": "optype", "values": [{"value": "FileInput"}]}}]}
],
"bpmnElement": [{"name":"dataStore", "attributes":[{"name":"id", "value":"$graph"},
													{"name":"name", "value":"$graph"},
													{"name":"isUnlimited", "value":"false"}]},
				{"name":"dataStoreReference", "attributes":[{"name":"dataStoreRef", "value":"DS_n"},
															{"name":"id", "value":"$graph"}]}]
},

{"name":"FileOutput",
"description": "A simple mapping for any node with operation type FileOutput",
"pattern":[
	{"sequence":[
		{"s1": {"name": "optype", "values": [{"value": "FileOutput"}]}}]}
],
"bpmnElement": [{"name":"dataStore", "attributes":[{"name":"id", "value":"$graph"},
													{"name":"name", "value":"$graph"},
													{"name":"isUnlimited", "value":"false"}]},
				{"name":"dataStoreReference", "attributes":[{"name":"dataStoreRef", "value":"DS_n"},
															{"name":"id", "value":"$graph"}]}]
},

{"name":"XMLInput",
"description": "A simple mapping for any node with operation type XMLInput",
"pattern":[
	{"sequence":[
		{"s1": {"name": "optype", "values": [{"value": "XMLInput"}]}}]}
],
"bpmnElement": [{"name":"dataStore", "attributes":[{"name":"id", "value":"$graph"},
													{"name":"name", "value":"$graph"},
													{"name":"isUnlimited", "value":"false"}]},
				{"name":"dataStoreReference", "attributes":[{"name":"dataStoreRef", "value":"DS_n"},
															{"name":"id", "value":"$graph"}]}]
},

{"name":"XMLOutput",
"description": "A simple mapping for any node with operation type XMLOutput",
"pattern":[
	{"sequence":[
		{"s1": {"name": "optype", "values": [{"value": "XMLOutput"}]}}]}
],
"bpmnElement": [{"name":"dataStore", "attributes":[{"name":"id", "value":"$graph"},
													{"name":"name", "value":"$graph"},
													{"name":"isUnlimited", "value":"false"}]},
				{"name":"dataStoreReference", "attributes":[{"name":"dataStoreRef", "value":"DS_n"},
															{"name":"id", "value":"$graph"}]}]
},

{"name":"ExcelInput",
"description": "A simple mapping for any node with operation type ExcelInput",
"pattern":[
	{"sequence":[
		{"s1": {"name": "optype", "values": [{"value": "ExcelInput"}]}}]}
],
"bpmnElement": [{"name":"dataStore", "attributes":[{"name":"id", "value":"$graph"},
													{"name":"name", "value":"$graph"},
													{"name":"isUnlimited", "value":"false"}]},
				{"name":"dataStoreReference", "attributes":[{"name":"dataStoreRef", "value":"DS_n"},
															{"name":"id", "value":"$graph"}]}]
},

{"name":"ExcelOutput",
"description": "A simple mapping for any node with operation type ExcelOutput",
"pattern":[
	{"sequence":[
		{"s1": {"name": "optype", "values": [{"value": "ExcelOutput"}]}}]}
],
"bpmnElement": [{"name":"dataStore", "attributes":[{"name":"id", "value":"$graph"},
													{"name":"name", "value":"$graph"},
													{"name":"isUnlimited", "value":"false"}]},
				{"name":"dataStoreReference", "attributes":[{"name":"dataStoreRef", "value":"DS_n"},
															{"name":"id", "value":"$graph"}]}]
},

{"name":"WSLookup",
"description": "A simple mapping for any node with operation type WSLookup",
"pattern":[
	{"sequence":[
		{"s1": {"name": "optype", "values": [{"value": "WSLookup"}]}}]}
],
"bpmnElement": [{"name":"task", "attributes":[{"name":"id", "value":"$graph"}, 
												{"name":"name", "value":"$graph"}]}]
},

{"name":"edge",
"description": "A simple mapping for any xLM edge",
"pattern":[],
"bpmnElement": [{"name":"sequenceFlow", "attributes":[{"name":"id", "value":"$graph"},
															{"name":"sourceRef", "value":"$graph"}, 
															{"name":"targetRef", "value":"$graph"}]}]
},

{"name":"mergeJoin",
"description": "A control-flow pattern that depicts a merge-Join 
				between two sorted data inputs in an ETL flow",
"pattern":[
	{"fork":[
		{"flow1":[
			{"repeat": ">1",
			"sequence":[
				{"s1": {"name": "optype", "values":[{"value": "Sort"}]}},
				{"s2": {"name": "$whiteList", "values":[]}}]}]}]
	},
	{"sequence": [
		{"s1": {"name":"optype", "values": [{"value": "Join"}, 
											{"value": "LeftOuterJoin"}]}}]
	}
],
"whiteList": [{"name": "optype", 
			"values":[{"value": "Splitter"}, {"value":"Router"}]}],
"blackList": [{"name": "optype", 
			"values": [{"value": "Join"}, {"value": "LeftOuterJoin"}]}],
"bpmnElement":[{"name":"subProcess", 
			"attributes":[{"name": "startQuantity", "value":"1"},
						{"name":"id", "value":"$graph"},
						{"name":"name", "value":"$create"},
						{"name":"isForCompensation", "value":"false"},
						{"name": "triggeredByEvent", "value":"false"},
						{"name":"completionQuantity", "value":"1"}]}]
},

{"name":"recoveryPoint",
"description": "A user-defined control-flow pattern that identifies check-pointing in an ETL flow",
"pattern":[
	{"sequence":[
		{"s1": {"name": "optype", "values": 
								[{"value": "Splitter"}, {"value": "Router"}]}}]},
	{"fork":[
		{"flow1":[
			{"repeat": "=1",
			"sequence":[
				{"s1":{"name":"$whiteList", "values": []}},
				{"s2":{"name":"type", "values": [{"value": "Datastore"}]}}]}]}]
	}
],
"bpmnElement":[
	{"name":"textAnnotation", 
	 "attributes":[{"name":"id", "value":"$create"},
				{"name":"textFormat", "value":"text/plain"}],
	"text":"recoveryPoint"
	},
	{"name":"association",
	"attributes":[{"name":"associationDirection", "value":"None"},
				{"name":"id", "value":"$create"},
				{"name":"sourceRef", "value":"$graph"},
				{"name":"targetRef", "value":"$create"}]}
],
"whiteList":[{"name": "optype", "values": [{"value": "UserDefinedFunction"}]}]
},

{"name":"compensation",	
"description": "A user-defined control-flow pattern to depict compensation action operations in an ETL flow",
"pattern":[
	{"sequence": [
		{"s1": {"name": "optype", "values": [{"value": "Splitter"}, {"value": "Router"}]}}]},
	{"fork":[
		{"flow1":[
			{"repeat": "=1",
			"sequence":[
				{"s1": {"name":"optype", "values": [{"value":"UserDefinedFunction"}]}},
				{"s2": {"name":"type", "values":[{"value": "Datastore"}]}}]}]}]
	}
],
"bpmnElement":[
	{"name":"subProcess", 
	 "attributes":[{"name":"name", "value":"$create"},
				{"name":"id", "value":"$graph"},
				{"name":"completionQuantity", "value":"1"},
				{"name":"isForCompensation", "value":"true"},
				{"name": "startQuantity", "value":"1"},
				{"name": "triggeredByEvent", "value":"false"}]}], 
"whiteList": [{"name": "optype", "values": [{"value": "UserDefinedFunction"}]}]
},

{"name":"replication",
"description": "A user-defined control-flow pattern that identifies replication in an ETL flow",
"pattern":[
	{"sequence":[
		{"s1": {"name": "optype", "values": 
								[{"value": "Splitter"}, {"value": "Router"}]}}]
	},
	{"fork":[
		{"flow1":[
			{"repeat": ">1",
			"sequence":[
				{"s1":{"name":"$anyType", "values": [{"value": "$anyValue"}]}}]}]}]
	},
	{"sequence":[
		{"s1": {"name": "optype", "values": 
								[{"value": "Union"}]}}]
	}
],
"blackList": [{"name": "optype", "values": [{"value": "Union"}]}],
"bpmnElement":[
	{"name":"subProcess", 
	 "attributes":[{"name":"name", "value":"$create"},
				{"name":"id", "value":"$graph"},
				{"name":"completionQuantity", "value":"1"},
				{"name":"isForCompensation", "value":"false"},
				{"name": "startQuantity", "value":"1"},
				{"name": "triggeredByEvent", "value":"false"}]},
	{"name":"multiInstanceLoopCharacteristics",
	"attributes":[{"name": "behavior", "value": "All"}, 
				{"name":"isSequential", "value":"false"}]}]
},

{"name":"externalDataValidation",
"description": "A user-defined pattern that identifies data quality actions to fill in null values in an ETL flow data input via a web service call",
"pattern":[
	{"sequence":[
		{"s1": {"name": "optype", "values": 
								[{"value": "Router"}]}}]
	},
	{"fork":[
		{"flow1":[
			{"repeat": "=1",
			"sequence":[
				{"s1":{"name":"$anyType", "values": [{"value": "$anyValue"}]}},
				{"s2":{"name":"optype", "values": [{"value": "WSLookup"}]}}, 
				{"s3":{"name":"$anyType", "values": [{"value": "$anyValue"}]}}]}]}]
	},
	{"sequence":[
		{"s1": {"name": "optype", "values": 
								[{"value": "Union"}]}}]
	}
],
"blackList": [{"name": "optype", "values": [{"value": "Union"}]}],
"bpmnElement":[
	{"name":"subProcess", 
	 "attributes":[{"name":"name", "value":"$create"},
				{"name":"id", "value":"$graph"},
				{"name":"completionQuantity", "value":"1"},
				{"name":"isForCompensation", "value":"false"},
				{"name": "startQuantity", "value":"1"},
				{"name": "triggeredByEvent", "value":"false"}]}]
}
]
}